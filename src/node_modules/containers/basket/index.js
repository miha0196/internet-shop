import React from 'react'
import {connect} from 'react-redux';   
import * as R from 'ramda';
import { Link } from 'react-router-dom';

import {getBasketPhonesWithCount, getTotalBasketPrice} from 'selectors';
import {
    removePhoneFromBasket,
    basketCheckout,
    cleanBasket
} from 'actions';

const Basket = ({
    phones, 
    totalPrice, 
    removePhoneFromBasket,
    basketCheckout,
    cleanBasket
}) => {
    const isBasketEmpty = R.isEmpty(phones);
    const renderContent = () => (
        <div>
            {isBasketEmpty && <div>Your shopping cart is empty</div>}
            <div className='table-responsive'>
                <table className='table-bordered table-striped table-condensed cf'> 
                    <tbody>
                        {phones.map((phone, index) => (
                            <tr 
                                className='item-checout'
                                key={index}
                            >
                                <td className='first-column-checkout'>
                                    <img 
                                        className='img-thumbnail'
                                        src={phone.image}
                                        alt={phone.name}
                                    />
                                </td>
                                <td>{phone.name}</td>
                                <td>${phone.price}</td>
                                <td>{phone.count}</td>
                                <td>
                                    <span 
                                    className='delete-cart'
                                    onClick={() => removePhoneFromBasket(phone.id)}    
                                ></span>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
            {R.not(isBasketEmpty) && 
                <div className='row'>
                    <div className='pull-right total-user-checkout'>
                        <b>Total</b>
                        ${totalPrice}
                    </div>
                </div>
            }
        </div>
    )

    const renderSidebar = () => (
        <div>
            <Link
                to='/'
                className='btn btn-info'
            >
                <span className='glyphicon glyphicon-info-sign'></span>
                <span>Continue shopping!</span>
            </Link>
            {R.not(isBasketEmpty) && 
                <div>
                    <button 
                        onClick={cleanBasket}
                        className='btn btn-danger'
                    >
                        <span className='glyphicon glyphicon-trash'></span>
                        Clean cart
                    </button>
                    <button 
                        onClick={() => basketCheckout(phones)}
                        className='btn btn-success'
                    >
                        <span className='glyphicon glyphicon-envelope'></span>
                        Checkout
                    </button>
                </div>
            }
        </div>
    )
    return (
        <div className='view-container'>
            <div className='container'>
                <div className='row'>
                    <div className='col-md-9'>
                        {renderContent()}
                    </div>
                    <div className='col-md-3 btn-user-checkout'>
                        {renderSidebar()}
                    </div>
                </div>
            </div>
        </div>
    )
}

const mapStateToProps = state => {
    return {
        phones: getBasketPhonesWithCount(state),
        totalPrice: getTotalBasketPrice(state) 
    }
}
const mapDipatchToProps = {
    removePhoneFromBasket,
    basketCheckout,
    cleanBasket
}

export default connect(mapStateToProps, mapDipatchToProps)(Basket)